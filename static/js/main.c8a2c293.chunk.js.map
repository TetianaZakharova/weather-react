{"version":3,"sources":["Icon/types.js","Icon/Icon.js","utils.js","WeatherCard/WeatherCard.js","App/App.js","index.js"],"names":["WEATHER_ICONS_BY_TYPE","rain","clear","clouds","unknown","Icon","type","weatherType","this","props","react_default","a","createElement","className","concat","iconSize","small","medium","large","size","React","Component","getDateFromDT","dt","format","moment","WeatherCard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","weather","fetchWeatherData","bind","assertThisInitialized","fetch","json","data","setState","list","weatherToday","city","name","Math","round","temp","day","Icon_Icon","main","toLowerCase","map","i","App","WeatherCard_WeatherCard","ReactDOM","render","src_App_App","document","getElementById"],"mappings":"6TAAMA,EAAwB,CAC1BC,KAAM,OACNC,MAAO,QACPC,OAAQ,SACRC,QAAS,WCAQC,mLAYT,IDTyBC,ECUzBC,EAAgBC,KAAKC,MAArBF,YAER,OACEG,EAAAC,EAAAC,cAAA,KAAGC,UAAS,wBAAAC,OAA0BN,KAAKO,SAA/B,QAAAD,QDbmBR,ECagDC,EDZ1EP,EAAsBM,GAAQ,gDCKrC,MANc,CACVU,MAAO,KACPC,OAAQ,KACRC,MAAO,OAJMV,KAAKC,MAAdU,MAOa,gBATSC,IAAMC,4BCA3BC,EAAgB,SAACC,EAAIC,GAC9B,OAAOC,IAAY,IAALF,GAAWC,OAAOA,ICCfE,cACnB,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAAkB,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAApB,KAAAoB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAxB,KAAMC,KAEDwB,MAAQ,CAAEC,QAAS,IAExBP,EAAKQ,iBAAmBR,EAAKQ,iBAAiBC,KAAtBR,OAAAS,EAAA,EAAAT,CAAAD,IALPA,mFASjBnB,KAAK2B,8LAIcG,MAAK,0FAAAxB,ODlBL,mDCkBbyB,kBAEaA,EAAKA,cAAlBC,SACJhC,KAAKiC,SAAS,CAAEP,QAASM,uIAGpB,IACCN,EAAY1B,KAAKyB,MAAjBC,QAEN,IAAKA,EAAQQ,KACX,OAAO,KAGX,IAAMC,EAAeT,EAAQQ,KAAK,GAEhC,OACEhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQS,EAAcqB,EAAapB,GAAI,gBACtDb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQqB,EAAQU,KAAKC,OAEtCnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWiC,KAAKC,MAAMJ,EAAaK,KAAKC,KAAvD,QACAvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACsC,EAAD,CAAM/B,KAAK,QAAQZ,YAAaoC,EAAaT,QAAQ,GAAGiB,KAAKC,mBAInE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,IACEqB,EAAQQ,KAAKW,IAAI,SAACJ,EAAKK,GAAN,OACf5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,WAAMU,EAAcY,EAAQQ,KAAKY,GAAG/B,GAAI,QACtCb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsC,EAAD,CAAM/B,KAAK,QAAQZ,YAAa2B,EAAQQ,KAAKY,GAAGpB,QAAQ,GAAGiB,KAAKC,iBAElE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYiC,KAAKC,MAAMb,EAAQQ,KAAKY,GAAGN,KAAKC,KAA3D,oBAlDuB7B,IAAMC,WCQhCkC,MAVf,WACE,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACdH,EAAAC,EAAAC,cAAC4C,EAAD,SCFRC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c8a2c293.chunk.js","sourcesContent":["const WEATHER_ICONS_BY_TYPE = {\n    rain: \"rain\",\n    clear: \"clear\",\n    clouds: \"cloudy\",\n    unknown: \"unknown\"\n};\n\nexport const getIconByWeatherType = (type) => {\n    return WEATHER_ICONS_BY_TYPE[type || 'unknown'];\n}","import React from 'react';\n\nimport { getIconByWeatherType } from './types';\n\nexport default class Icon extends React.Component {\n  get iconSize() {\n    const { size } = this.props;\n    const sizes = {\n        small: '32',\n        medium: '64',\n        large: '128',\n    };\n\n    return sizes[size || 'small'];\n}\n\n  render () {\n    const { weatherType } = this.props;\n\n    return (\n      <i className={`wu wu-solid-white wu-${this.iconSize} wu-${getIconByWeatherType(weatherType)}`} />\n    );\n  }\n}","import moment from 'moment';\n\nexport const API_KEY = \"47fe20af59af3bbf2a3b306a18fdb1d7\";\n\nexport const getDateFromDT = (dt, format) => {\n    return moment(dt * 1000).format(format);\n}","import React from 'react';\n\nimport Icon from '../Icon/index';\n\nimport { API_KEY, getDateFromDT } from '../utils';\n\nexport default class WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { weather: {} };\n\n    this.fetchWeatherData = this.fetchWeatherData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n  }\n\n  async fetchWeatherData() {\n    const json = await fetch(`https://api.openweathermap.org/data/2.5/forecast/daily?q=Kyiv&units=metric&cnt=7&appid=${API_KEY}`);\n    \n    const data = await json.json();\n      this.setState({ weather: data });\n  }\n\n  render() {\n    const { weather } = this.state;\n\n      if (!weather.list) {\n        return null;\n      }\n\n    const weatherToday = weather.list[0];\n\n      return (\n        <div>\n          <div className=\"todayWeather\">\n            <div className=\"dateCity\">\n              <div className=\"date\">{getDateFromDT(weatherToday.dt, 'MMMM D dddd')}</div>\n              <div className=\"city\">{weather.city.name}</div>\n            </div>\n            <div className=\"temp\">\n              <div className=\"tempCel\">{Math.round(weatherToday.temp.day)}°</div>                 \n              <div className=\"tempIcon\">\n                <Icon size=\"large\" weatherType={weatherToday.weather[0].main.toLowerCase()} />\n              </div>\n            </div>\n          </div>\n          <div className=\"weekWeather\"> {\n            weather.list.map((day, i) => (\n              <div className=\"weekForecast\">\n                <div>{getDateFromDT(weather.list[i].dt, 'ddd')}</div>\n                  <div>\n                    <Icon size=\"small\" weatherType={weather.list[i].weather[0].main.toLowerCase()} />\n                  </div>\n                  <div className=\"weekTemp\">{Math.round(weather.list[i].temp.day)}°</div>           \n              </div>\n            ))\n          }\n          </div>\n        </div>\n      );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport WeatherCard from '../WeatherCard/index';\n\nfunction App() {\n  return (\n    <div className=\"base\">\n      <main className=\"content\">\n        <WeatherCard />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './Icon/wu-icons-style.min.css';\nimport App from './App/index';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}